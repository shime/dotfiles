#!/bin/sh
# Contains convenient functions shared between bash and zsh
top-history(){
  history | awk '{print $2}' | awk 'BEGIN {FS="|"}{print $1}' | sort | uniq -c | sort -nr | head
}

# Kill process by name
nuke(){
  kill -9 `pgrep $*`
}

# Making git play nicely when pairing.
hitch() {
  command hitch "$@"
  if [[ -s "$HOME/.hitch_export_authors" ]] ; then source "$HOME/.hitch_export_authors" ; fi
}
alias unhitch='hitch -u'

# Makes adding aliases easier
add-alias(){
  echo "alias $@" >> ~/.aliases
  source ~/.aliases
}

# For showing git branch in PS1
parse_git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}

# For creating new apps
app-start(){
  if [[ -z $1 ]]; then
    echo "name the new app, pls: app-start <name>"
  fi

  git clone git@github.com:shime/app-skeleton.git $1
}

wiki() {
  cd $NOTES_DIR
  nvim index.wiki
}


tldr() {
  curl "cheat.sh/$@"
}

note() {
  if [[ -z $1 ]]; then
    wiki
  else
    local args="$@"
    nvim -c ":set autochdir" "$HOME/Documents/Notes/$args.wiki"
  fi
}

zkf() {
  cd $HOME/Documents/Notes
  local files
  IFS=$'\n' files=($(fzf --height 100% --preview "bat --color always --language md --style plain {}" --preview-window=top:65%))
  [[ -n "$files" ]] && vim "${files[@]}"
}

f(){
  local files
  IFS=$'\n' files=($(fzf))
  [[ -n "$files" ]] && vim "${files[@]}"
}
